name: Snyk Security Scan

on:
  workflow_dispatch: # Manual trigger
  push:
    branches:
      - main
  pull_request:

jobs:
  snyk:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: . # root (where pom.xml exists)

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Snyk
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      # ✅ Run Snyk test and save JSON for quality gate check
      - name: Snyk Test (JSON + SARIF)
        id: snyk-test
        run: |
          snyk test --file=pom.xml --json > snyk.json || true
          snyk test --file=pom.xml --sarif-file-output=snyk.sarif || true

      # ✅ Upload SARIF report (always run)
      - name: Upload SARIF report
        if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

      # ✅ Apply Custom Quality Gate
      - name: Apply Quality Gate (Critical > 0 OR High > 5)
        run: |
          CRITICAL=$(jq '.vulnerabilities | map(select(.severity=="critical")) | length' snyk.json)
          HIGH=$(jq '.vulnerabilities | map(select(.severity=="high")) | length' snyk.json)

          echo "Found $CRITICAL critical vulnerabilities"
          echo "Found $HIGH high vulnerabilities"

          if [ "$CRITICAL" -gt 0 ] || [ "$HIGH" -gt 5 ]; then
            echo "❌ Quality Gate Failed: $CRITICAL critical and $HIGH high vulnerabilities"
            exit 1
          else
            echo "✅ Quality Gate Passed: $CRITICAL critical and $HIGH high vulnerabilities"
          fi

      # ✅ Monitor (always run, even if previous step failed)
      - name: Snyk Monitor
        if: always()
        run: snyk monitor --file=pom.xml || true
